---
execute:
  warning: false
format:
  html:
    code-fold: true
---
# PFAS survey
```{r}
library(tidyverse)
library(readxl)
library(ggmap)
library(janitor)
library(ggrepel)
library(GGally)
library(targets)
library(gt)
library(DataExplorer)
library(patchwork)
library(ggh4x)
library(readODS)
```


```{r}
  
raw_data_inorganic <- read_ods("data/Kjemidatabasen_03_2023.ods", sheet = "INORGANIC") %>% clean_names() %>%
  select(
    sample_id_i = x1096mc002_1,
    year = cruise_4,
    station = station_6,
    core_id = sample_9,
    sdepth_from = sample_interval_top_bottom_10,
    sdepth_to = x11,
    longitude = dde_12,
    latitude = ddn_13,
    depth = mbsl_14,
    clay_fraction,
    silt_fraction,
    sand_fraction,
    gravel_fraction,
    toc
    )
         
                                                    

raw_data_organic <- read_ods("data/Kjemidatabasen_03_2023.ods", sheet = "ORGANIC") %>% clean_names()

pfases <- raw_data_organic %>% select(pfosa:pf_te_a) %>% names()

organic <- raw_data_organic %>% select(
  sample_id_o = sample_1,
  year = cruise_3,
  station,
  core_id = sample_8,
  sdepth_from = sample_interval_top_bottom,
  sdepth_to = x10,
  longitude = dde,
  latitude = ddn,
  depth = mbsl,
  c(pfosa:pf_te_a)
) %>% 
  filter(if_any(all_of(pfases), ~.x != "nr")) %>% 
  mutate(across(
    -c(sample_id_o, station, core_id), ~ .x %>% as.numeric()
  )) %>% 
  write_excel_csv2("data/organic_all_pfase_analyses.csv")

stations_organic <- organic %>% select(station) %>% distinct() %>% pull() %>% as.vector()

inorganic <- raw_data_inorganic %>% 
  mutate(across(
    -c(sample_id_i, station, core_id), ~ .x %>% as.numeric()
  )) %>% filter(station %in% stations_organic, sdepth_to < 3) %>% 
  group_by(station) %>% 
  mutate(
    n = n()
  ) %>% ungroup() %>% 
  filter(n >1) %>% 
  write_excel_csv2("data/inorganic_errors.csv")
```

```{r}
# columns same in both neg and pos datasets
intersect_cols <- intersect(names(raw_data_organic), names(raw_data_inorganic)) %>% as.vector()


# print columns not in both datasets.
bind_rows(
  raw_data_organic %>%
  select(!intersect_cols) %>%
  names() %>% as_tibble(),
  raw_data_inorganic %>% select(!intersect_cols) %>% names() %>% as_tibble()
)
```

